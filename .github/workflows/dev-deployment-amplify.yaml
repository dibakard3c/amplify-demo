name: Deploy Deployment Amplify

on:
  workflow_dispatch:
  
permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      APP_ID: ${{ secrets.AMPLIFY_APP_ID }}
      BRANCH_NAME: development

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies & build project
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force
          npm install --legacy-peer-deps --save-dev
          npm run build
          npx esbuild next.config.ts --bundle --platform=node --outfile=next.config.js

          mkdir -p ./amplify-artifacts
          zip -r ./amplify-artifacts/app.zip .next public package.json next.config.js


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.TF_EXEC_ROLE_DEV }}

      - name: Stop previous job if running
        run: |
          JOBS=$(aws amplify list-jobs --app-id "$APP_ID" --branch-name "$BRANCH_NAME")
          LAST_JOB_ID=$(echo $JOBS | jq -r '.jobSummaries[0].jobId')
          LAST_JOB_STATUS=$(echo $JOBS | jq -r '.jobSummaries[0].status')
          echo "Last job: $LAST_JOB_ID ($LAST_JOB_STATUS)"
          if [[ "$LAST_JOB_STATUS" == "PENDING" || "$LAST_JOB_STATUS" == "RUNNING" ]]; then
            echo "Stopping stuck job $LAST_JOB_ID..."
            aws amplify stop-job --app-id "$APP_ID" --branch-name "$BRANCH_NAME" --job-id "$LAST_JOB_ID"
          fi
      - name: Upload ZIP to Amplify
        run: |
          DEPLOYMENT_JSON=$(aws amplify create-deployment --app-id "$APP_ID" --branch-name "$BRANCH_NAME")
          echo "Created deployment: $DEPLOYMENT_JSON"

          UPLOAD_URL=$(echo "$DEPLOYMENT_JSON" | jq -r '.zipUploadUrl')
          JOB_ID=$(echo "$DEPLOYMENT_JSON" | jq -r '.jobId')

          echo "Uploading ZIP..."
          curl -T ./amplify-artifacts/app.zip "$UPLOAD_URL"

          echo "JOB_ID=$JOB_ID" >> $GITHUB_ENV

      - name: Publish Deployment to Amplify
        run: |
          aws amplify start-deployment \
            --app-id "$APP_ID" \
            --branch-name "$BRANCH_NAME" \
            --job-id "$JOB_ID"
